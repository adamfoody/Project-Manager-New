{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green, yellow } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\nconst useStyles = makeStyles(theme => ({\n  tableHead: {\n    borderBottomStyle: \"solid\",\n    borderBottomColor: \"blue\"\n  },\n  stickyHeader: {}\n}));\nexport default function Tasks() {\n  _s();\n\n  function fetchTasks() {\n    axios.get('http://localhost:8080/tasks').then(response => {\n      // handle success\n      setTasks(response.data);\n    });\n  }\n\n  const classes = useStyles();\n  const [tasks, setTasks] = [];\n  const [displayTasks, setDisplayTasks] = useState(true);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientTable\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"text-align-center\",\n      children: displayTasks == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"Task Name   \", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                className: \"refreshButton\",\n                children: /*#__PURE__*/_jsxDEV(GreenButton, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  size: \"small\",\n                  onClick: fetchTasks,\n                  children: \"Refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 39\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 39\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Email \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 38\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.patientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.dob\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), row.allergy == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \" None \\u274C \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), row.allergy == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: \"hasAllergy\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  align: \"right\",\n                  className: \"smallButton\",\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => {\n                    fetchAllergyRecordsById(row.patientId);\n                  },\n                  children: \"Allergy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", row.gender, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justifyContent: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    className: \"smallButton\",\n                    color: \"primary\",\n                    variant: \"outlined\",\n                    onClick: () => {\n                      fetchTreatmentRecordsById(row.patientId);\n                    },\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  className: \"smallButton\",\n                  color: \"secondary\",\n                  variant: \"outlined\",\n                  onClick: () => {\n                    deletePatient(row.patientId);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, row.patientId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"cVdcxaGLe4erhMipqBpxHsKxHbE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Tasks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Tasks\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Tasks.js"],"names":["React","useState","useEffect","axios","Grid","TableContainer","Button","Table","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","ButtonGroup","Swal","withStyles","green","yellow","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","useStyles","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","Tasks","fetchTasks","get","then","response","setTasks","data","classes","tasks","displayTasks","setDisplayTasks","tableContainer","minWidth","patients","map","row","border","name","patientId","dob","address","email","allergy","fetchAllergyRecordsById","gender","fetchTreatmentRecordsById","deletePatient"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport {Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles'\nimport { green, yellow} from '@material-ui/core/colors'\n\nconst GreenButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n\n  const useStyles = makeStyles((theme) => ({\n    tableHead: {\n        borderBottomStyle: \"solid\",\n        borderBottomColor: \"blue\"\n    },\n    stickyHeader:{\n      \n    }\n}));\n\n\n  \n\n\nexport default function Tasks() {\n\n    function fetchTasks() {\n        axios.get('http://localhost:8080/tasks').then((response) => {\n          // handle success\n          setTasks(response.data);\n        });\n      }\n\n    const classes = useStyles();\n\n    const [tasks, setTasks] = ([]);\n    const [displayTasks, setDisplayTasks] = useState(true);\n\n    useEffect(() => {\n        fetchTasks();\n      }, []);\n\n\n  return(\n\n    <div className=\"patientTable\">\n    <main className=\"text-align-center\">\n\n\n    {  displayTasks == true && (\n\n        <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n    \n\n\n      \n          <TableRow >\n      \n            <TableCell>Task Name   <ButtonGroup className=\"refreshButton\"> \n\n<GreenButton\n      variant='contained'\n       color='secondary'\n       size=\"small\"\n       onClick={fetchTasks}\n   \n       >Refresh</GreenButton>\n\n  </ButtonGroup></TableCell>\n            <TableCell align=\"right\"> <strong> </strong> </TableCell>\n            <TableCell align=\"right\"> <strong> </strong> </TableCell>\n            <TableCell align=\"right\"><strong> Address</strong></TableCell>\n            <TableCell align=\"right\"><strong> Email </strong></TableCell>\n            <TableCell align=\"right\"><strong>  </strong></TableCell>\n            <TableCell align=\"right\"><strong>  </strong></TableCell>\n            <TableCell align=\"right\"><strong>  </strong> </TableCell>\n            <TableCell align=\"right\"><strong> </strong></TableCell>\n          </TableRow>\n    \n        <TableBody>\n          {patients.map((row) => (\n            <TableRow\n              key={row.patientId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.patientId}</TableCell>\n              <TableCell align=\"right\">{row.dob}</TableCell>\n              <TableCell align=\"right\">{row.address}</TableCell>\n              <TableCell align=\"right\">{row.email}</TableCell>\n\n                {row.allergy == 0 && (\n                <TableCell align=\"right\"> None &#x274C; </TableCell>\n                )}\n                {row.allergy == 1 && (\n                <TableCell align=\"right\" className=\"hasAllergy\"> \n                <Button\n                size=\"small\"\n                 align=\"right\"\n                 className=\"smallButton\"\n                 variant=\"outlined\"\n                 color=\"secondary\"\n                 onClick={() => {\n                    fetchAllergyRecordsById(row.patientId);\n                  }}\n                >\n                Allergy\n                \n                 </Button>\n                </TableCell>\n                )}\n                <TableCell align=\"right\"> {row.gender} </TableCell>\n                <TableCell align=\"right\"> \n              <Grid container justifyContent=\"flex-end\">\n                <Button\n                 size=\"small\"\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    fetchTreatmentRecordsById(row.patientId);\n                  }}\n                >\n                \n                  View\n                </Button>\n                </Grid>\n\n                </TableCell>\n\n\n                <TableCell align=\"right\">\n                  \n\n                <Button\n              \n            \n                 size=\"small\"\n                  className=\"smallButton\"\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    deletePatient(row.patientId);\n                  }}\n                 \n                >\n              \n                  Delete\n                </Button>\n                \n                  \n                </TableCell>\n                \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n\n\n        \n    )}   \n\n\n    </main>\n\n   \n    </div>\n  ) \n  \n\n  \n}\n"]},"metadata":{},"sourceType":"module"}