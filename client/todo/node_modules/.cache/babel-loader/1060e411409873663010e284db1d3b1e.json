{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green, yellow } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\nconst useStyles = makeStyles(theme => ({\n  tableHead: {\n    borderBottomStyle: \"solid\",\n    borderBottomColor: \"blue\"\n  },\n  stickyHeader: {}\n}));\nexport default function Tasks() {\n  _s();\n\n  const classes = useStyles();\n\n  function fetchTasks() {\n    axios.get('http://localhost:8080/tasks').then(response => {\n      // handle success\n      setTasks(response.data);\n    });\n  }\n\n  function Complete(treatment1) {\n    var dateVariable = Date().toLocaleString();\n    const value = {\n      endDate: dateVariable\n    };\n    axios.put(`http://localhost:8080/completed/${treatment1}`, value).then(response => {\n      // handle success\n      Swal.fire({\n        icon: 'success',\n        title: \"Completed Treatment Record\",\n        text: dateVariable\n      });\n    });\n  }\n\n  const [tasks, setTasks] = useState([]);\n  const [displayTasks, setDisplayTasks] = useState(true);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientTable\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"text-align-center\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Task Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 24\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                className: \"refreshButton\",\n                children: /*#__PURE__*/_jsxDEV(GreenButton, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  size: \"small\",\n                  onClick: fetchTasks,\n                  children: \"Refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Task ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 39\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Assigned Contact \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 39\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Priority \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Start Date \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" End Date \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Notes \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 38\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Complete \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 38\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: tasks.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.taskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.taskId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.assignedContact\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.endDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justifyContent: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    className: \"smallButton\",\n                    color: \"primary\",\n                    variant: \"outlined\",\n                    children: \"Complete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, row.taskId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"S2ymVMWR6161HVSK0P5L37pDjdY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Tasks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Tasks\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Tasks.js"],"names":["React","useState","useEffect","axios","Grid","TableContainer","Button","Table","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","ButtonGroup","withStyles","green","yellow","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","useStyles","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","Tasks","classes","fetchTasks","get","then","response","setTasks","data","Complete","treatment1","dateVariable","Date","toLocaleString","value","endDate","put","Swal","fire","icon","title","text","tasks","displayTasks","setDisplayTasks","tableContainer","minWidth","map","row","border","taskName","taskId","assignedContact","priority","startDate","notes"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport {Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\nimport { green, yellow} from '@material-ui/core/colors'\n\nconst GreenButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n\n  const useStyles = makeStyles((theme) => ({\n    tableHead: {\n        borderBottomStyle: \"solid\",\n        borderBottomColor: \"blue\"\n    },\n    stickyHeader:{\n      \n    }\n}));\n\n\n  \n\n\nexport default function Tasks() {\n    const classes = useStyles();\n\n    function fetchTasks() {\n        axios.get('http://localhost:8080/tasks').then((response) => {\n          // handle success\n          setTasks(response.data);\n        });\n      }\n\n\n  function Complete(treatment1) {\n   \n    var dateVariable = Date().toLocaleString();\n\n    const value = {\n      endDate: dateVariable\n  };\n    axios\n      .put(`http://localhost:8080/completed/${treatment1}`, value)\n      .then((response) => {\n        // handle success\n        Swal.fire({\n          icon: 'success',\n          title: \"Completed Treatment Record\",\n          text: dateVariable\n        \n         \n        })\n      });\n\n      \n  }\n\n\n    const [tasks, setTasks] = useState([]);\n    const [displayTasks, setDisplayTasks] = useState(true);\n\n    useEffect(() => {\n        fetchTasks();\n      }, []);\n\n\n  return(\n\n    <div className=\"patientTable\">\n    <main className=\"text-align-center\">\n\n\n  \n\n        <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n    \n\n\n      \n          <TableRow >\n      \n            <TableCell><strong> Task Name</strong>  <ButtonGroup className=\"refreshButton\"> \n\n<GreenButton\n      variant='contained'\n       color='secondary'\n       size=\"small\"\n       onClick={fetchTasks}\n   \n       >Refresh</GreenButton>\n\n  </ButtonGroup></TableCell>\n            <TableCell align=\"right\"> <strong> Task ID</strong> </TableCell>\n            <TableCell align=\"right\"> <strong> Assigned Contact </strong> </TableCell>\n            <TableCell align=\"right\"><strong> Priority </strong></TableCell>\n    \n            <TableCell align=\"right\"><strong> Start Date </strong></TableCell>\n            <TableCell align=\"right\"><strong> End Date </strong></TableCell>\n            <TableCell align=\"right\"><strong> Notes </strong> </TableCell>\n            <TableCell align=\"right\"><strong> Complete </strong> </TableCell>\n         \n          </TableRow>\n    \n        <TableBody>\n          {tasks.map((row) => (\n            <TableRow\n              key={row.taskId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.taskName}\n              </TableCell>\n              <TableCell align=\"right\">{row.taskId}</TableCell>\n              <TableCell align=\"right\">{row.assignedContact}</TableCell>\n              <TableCell align=\"right\">{row.priority}</TableCell>\n              <TableCell align=\"right\">{row.startDate}</TableCell>\n              <TableCell align=\"right\">{row.endDate}</TableCell>\n              <TableCell align=\"right\">{row.notes}</TableCell>\n\n           \n               \n                <TableCell align=\"right\"> \n              <Grid container justifyContent=\"flex-end\">\n                <Button\n                 size=\"small\"\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n               \n                >\n                \n                 Complete\n                </Button>\n                </Grid>\n\n                </TableCell>\n\n                \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n\n\n        \n\n\n    </main>\n\n   \n    </div>\n  ) \n  \n\n  \n}\n"]},"metadata":{},"sourceType":"module"}