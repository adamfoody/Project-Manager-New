{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box, Radio, RadioGroup, FormGroup, FormControlLabel, Container, InputLabel, MenuItem, Select, Icon } from '@material-ui/core';\nimport \"../App.css\";\nimport Swal from 'sweetalert2';\nimport { green, orange, yellow } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\n\nfunction Form(props) {\n  _s();\n\n  const {\n    history\n  } = props;\n  const [taskName, setTaskName] = useState('');\n  const [assignedContact, setAssignedContact] = useState('');\n  const [priority, setPriority] = useState('');\n  const [meetingId, setmMeetingId] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [notes, setNotes] = useState('');\n  const [meeting, setMeeting] = useState([]);\n\n  function createTask() {\n    const value = {\n      taskName: taskName,\n      assignedContact: assignedContact,\n      priority: priority,\n      startDate: startDate,\n      endDate: endDate,\n      notes: notes,\n      meetingId: meetingId\n    };\n    axios.post('http://localhost:8080/createtask', value).then(response => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Task Saved!'\n      });\n      handleClearTaskForm();\n    });\n  }\n\n  const handleMenuClick = pageURL => {\n    history.push(pageURL);\n  };\n\n  const handleClearTaskForm = () => (setTaskName(''), setAssignedContact(''), setPriority(''), setmMeetingId(''), setStartDate(''), setEndDate(''), setNotes(''));\n\n  function fetchMeeting() {\n    axios.get('http://localhost:8080/meetings').then(response => {\n      // handle success\n      setMeeting(response.data);\n    });\n  }\n\n  useEffect(() => {\n    fetchMeeting();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          style: {\n            color: \"#3f51b5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"  Create Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"Form\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"Form\",\n            type: \"text\",\n            placeholder: \"Task Name\",\n            alignItems: \"center\",\n            variant: \"outlined\",\n            label: \"Task Name\",\n            value: taskName,\n            onChange: e => setTaskName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"Form\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Assigned Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              variant: \"outlined\",\n              value: assignedContact,\n              onChange: e => setAssignedContact(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Mosu\",\n                children: \"Mosu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Adam\",\n                children: \"Adam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"James\",\n                children: \"James\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"Form\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Task Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => setPriority(e.target.value),\n              value: priority,\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"High\",\n                children: \"High \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"Form\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Meeting ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onCl: true,\n              variant: \"outlined\",\n              children: meeting.map(meeting => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: meeting.meetingId,\n                children: meeting.meetingId\n              }, meeting.meetingId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"Form\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: startDate,\n            onChange: e => setStartDate(e.target.value),\n            className: \"Form\",\n            type: \"date\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"Form\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"Form\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            type: \"date\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"Form\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"Form\",\n            value: notes,\n            onChange: e => setNotes(e.target.value),\n            type: \"number\",\n            placeholder: \"Notes\",\n            label: \"Notes\",\n            multiline: true,\n            rows: 5,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            className: \"Form\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: createTask,\n              children: \"Save Task  \\uD83D\\uDCE5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: handleClearTaskForm,\n              children: \"Clear Form \\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(GreenButton, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => handleMenuClick('/updateform'),\n              children: \"Update ToDo \\uD83D\\uDCE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Form, \"cDOD4P0RBnDd3WT4IXNTt6MoBL0=\");\n\n_c2 = Form;\n;\nexport default _c3 = withRouter(Form);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Form.js"],"names":["React","useState","useEffect","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","Radio","RadioGroup","FormGroup","FormControlLabel","Container","InputLabel","MenuItem","Select","Icon","Swal","green","orange","yellow","withStyles","withRouter","useHistory","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","Form","props","history","taskName","setTaskName","assignedContact","setAssignedContact","priority","setPriority","meetingId","setmMeetingId","startDate","setStartDate","endDate","setEndDate","notes","setNotes","meeting","setMeeting","createTask","value","post","then","response","resData","data","fire","icon","title","handleClearTaskForm","handleMenuClick","pageURL","push","fetchMeeting","get","e","target","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box, Radio, RadioGroup, FormGroup,FormControlLabel\n, Container, InputLabel, MenuItem, Select,\nIcon} from '@material-ui/core';\nimport \"../App.css\"\nimport Swal from 'sweetalert2';\nimport { green, orange, yellow} from '@material-ui/core/colors'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter, useHistory}  from \"react-router-dom\";\n\n\nconst GreenButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n\nfunction Form (props){\n\n  const {history} = props;\n\n    const [taskName, setTaskName] = useState('');\n    const [assignedContact, setAssignedContact] = useState('');\n    const [priority, setPriority] = useState('');\n    const [meetingId, setmMeetingId] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [notes, setNotes] = useState('')\n    const [meeting, setMeeting] = useState([]);\n\n\n\n  function createTask() {\n    const value = {\n        taskName: taskName,\n        assignedContact: assignedContact,\n        priority: priority,\n        startDate: startDate,\n        endDate: endDate,\n        notes: notes,\n        meetingId: meetingId\n    };\n\n    axios.post('http://localhost:8080/createtask', value).then((response) => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Task Saved!',\n     \n      })\n      handleClearTaskForm();\n    });\n  }\n\n\n  const handleMenuClick = (pageURL) => {\n    history.push(pageURL)\n\n    \n};\n\n\n    \n    const handleClearTaskForm = () => (\n       setTaskName(''),\n       setAssignedContact(''),\n       setPriority(''),\n       setmMeetingId(''),\n       setStartDate(''),\n       setEndDate(''),\n       setNotes('')\n\n    );\n\n    function fetchMeeting() {\n      axios.get('http://localhost:8080/meetings').then((response) => {\n        // handle success\n        setMeeting(response.data);\n      });\n    }\n\n    useEffect(() => {\n      fetchMeeting();\n    }, []);\n\n\n    \n\n\n  return (<div >\n\n  \n        <Box \n    \n          display=\"flex\" \n          justifyContent=\"center\"\n          alignItems=\"center\"\n          className = \"Form\">\n\n          \n        <FormControl>\n        \n              <FormLabel style={{color:\"#3f51b5\"}} >\n                  <h2 >\n                    <strong>\n                      <u>  Create Task </u>\n                    </strong>\n                  </h2>\n                  </FormLabel>\n              \n                  \n                  <FormGroup    className = \"Form\" >\n                <TextField\n               \n                         className = \"Form\"\n                      type=\"text\"\n                      placeholder=\"Task Name\"\n                      alignItems=\"center\"\n                      variant=\"outlined\"\n                      label=\"Task Name\"\n                      value={taskName}\n                      onChange={(e) => setTaskName(e.target.value)}\n                      >\n                     \n                      </TextField>\n                      </FormGroup>\n\n\n\n                      <FormGroup    className = \"Form\" >\n               \n                      <FormControl fullWidth>\n                <FormLabel>Assigned Contact</FormLabel>\n          \n                  <Select\n                \n                 \n                    \n              \n              \n              \n                    variant=\"outlined\"\n                    value={assignedContact}\n                    onChange={(e) => setAssignedContact(e.target.value)}\n     \n                    \n                  >\n                    <MenuItem value={\"Mosu\"}>Mosu</MenuItem>\n                    <MenuItem value={\"Adam\"}>Adam</MenuItem>\n                    <MenuItem value={\"James\"}>James</MenuItem>\n                 \n                  </Select>\n                </FormControl>\n                \n                     </FormGroup>\n\n\n\n\n\n\n            <FormGroup    className = \"Form\" >\n            <FormControl fullWidth>\n                <FormLabel>Task Priority</FormLabel>\n          \n                  <Select\n                \n                 \n                onChange={(e) => setPriority(e.target.value)}\n              \n                value={priority}\n              \n                    variant=\"outlined\"\n     \n                    \n                  >\n                    <MenuItem value={\"High\"}>High </MenuItem>\n                    <MenuItem value={\"Medium\"}>Medium</MenuItem>\n                    <MenuItem value={\"Low\"}>Low</MenuItem>\n                 \n                  </Select>\n                </FormControl>\n\n               </FormGroup>\n                 \n               <FormGroup    className = \"Form\" >\n            <FormControl fullWidth>\n                <FormLabel>Meeting ID</FormLabel>\n          \n                  <Select\n                    onCl\n                 \n           \n              \n                    variant=\"outlined\"\n     \n                    \n                  >\n\n              {meeting.map((meeting) => \n                    <MenuItem\n                   key={meeting.meetingId}\n                   value={meeting.meetingId}>\n                {meeting.meetingId}</MenuItem>\n                    )}\n\n\n                  </Select>\n                </FormControl>\n\n               </FormGroup>\n\n                      \n              <FormGroup    className = \"Form\" >\n               \n              <FormLabel>Start Date</FormLabel>\n              <TextField\n              value={startDate}\n              onChange={(e) => setStartDate(e.target.value)}\n             className = \"Form\"\n                   \n                 \n                     type=\"date\"\n                    \n               \n                     variant=\"outlined\"\n                    \n                    \n              />\n              </FormGroup>\n                      \n              <FormGroup    className = \"Form\" >\n               \n \n                  \n              <FormLabel>End Date</FormLabel>\n              <TextField\n             className = \"Form\"\n             value={endDate}\n             onChange={(e) => setEndDate(e.target.value)}\n                     type=\"date\"\n                     variant=\"outlined\"          \n                    \n              />\n              </FormGroup>\n\n            <FormGroup    className = \"Form\" >\n            <TextField \n            className = \"Form\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n            \n                 type=\"number\"\n                 placeholder=\"Notes\"\n                 label=\"Notes\"\n\n                  multiline\n                rows={5}\n           \n                \n         \n                 variant=\"outlined\"\n                \n              \n     />\n     </FormGroup>\n           \n\n           \n \n         <Grid >\n               <ButtonGroup variant=\"outlined\"    className = \"Form\" >\n               <Button\n                 color=\"primary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n                 onClick={createTask}\n                 \n                \n               \n              \n              \n               >\n                 Save Task  &#128229;\n               </Button>\n        \n \n               <Button\n                 color=\"secondary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n                 onClick = {handleClearTaskForm}\n              \n                \n                 \n               >\n                 Clear Form &#10006;\n               </Button>\n              \n \n               <GreenButton\n              variant='contained'\n               color='secondary'\n               onClick={()=>handleMenuClick('/updateform')}\n         \n         \n              \n               >Update ToDo &#128233;</GreenButton>\n \n\n \n \n          </ButtonGroup>\n          </Grid>\n        \n       \n     </FormControl>\n \n     \n \n         </Box>\n\n\n  </div>);\n};\n\nexport default withRouter(Form);\n"]},"metadata":{},"sourceType":"module"}