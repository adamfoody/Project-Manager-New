{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box, Radio, RadioGroup, FormGroup, FormControlLabel, Container, InputLabel, MenuItem, Select, Icon } from '@material-ui/core';\nimport \"../App.css\";\nimport Swal from 'sweetalert2';\nimport { green, orange, yellow } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\n\nfunction Form() {\n  _s();\n\n  const [taskName, setTaskName] = useState('');\n  const [assignedContact, setAssignedContact] = useState('');\n  const [priority, setPriority] = useState('');\n  const [taskId, setTaskId] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [notes, setNotes] = useState('');\n\n  function createTask() {\n    const value = {\n      taskName: taskName,\n      assignedContact: assignedContact,\n      priority: priority,\n      taskId: taskId,\n      startDate: startDate,\n      endDate: endDate,\n      notes: notes\n    };\n    axios.post('http://localhost:8080/createtask', value).then(response => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Task Saved!'\n      });\n      handleClearForm();\n    });\n  }\n\n  function updateTask() {\n    const value = {\n      taskName: taskName,\n      assignedContact: assignedContact,\n      priority: priority,\n      taskId: taskId,\n      startDate: startDate,\n      endDate: endDate,\n      notes: notes\n    };\n    axios.put(`http://localhost:8080/updateTask/${taskId}`, value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire({\n        icon: 'success',\n        title: 'Updated Task'\n      });\n      handleClearForm();\n    });\n  }\n\n  const handleClearForm = () => (setTaskName(''), setAssignedContact(''), setPriority(''), setTaskId(''), setStartDate(''), setEndDate(''), setNotes(''));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        container: true,\n        spacing: 3,\n        rowSpacing: 1,\n        columnSpacing: {\n          xs: 1,\n          sm: 2,\n          md: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            style: {\n              color: \"#3f51b5\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: /*#__PURE__*/_jsxDEV(\"u\", {\n                  children: \"  Create Task \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"Form\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"Form\",\n              type: \"text\",\n              placeholder: \"Task Name\",\n              alignItems: \"center\",\n              variant: \"outlined\",\n              label: \"Task Name\",\n              value: taskName,\n              onChange: e => setTaskName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"Form\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Assigned Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                variant: \"outlined\",\n                value: assignedContact,\n                onChange: e => setAssignedContact(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Mosu\",\n                  children: \"Mosu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Adam\",\n                  children: \"Adam\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"James\",\n                  children: \"James\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"Form\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Task Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                onChange: e => setPriority(e.target.value),\n                value: priority,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"High\",\n                  children: \"High \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"Form\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"Form\",\n              value: taskId,\n              onChange: e => setTaskId(e.target.value),\n              label: \"Task ID\",\n              type: \"number\",\n              placeholder: \"Task ID\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"Form\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"Form\",\n              type: \"date\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"Form\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"Form\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              type: \"date\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"Form\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"Form\",\n              value: notes,\n              onChange: e => setNotes(e.target.value),\n              type: \"number\",\n              placeholder: \"Notes\",\n              label: \"Notes\",\n              multiline: true,\n              rows: 5,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              variant: \"outlined\",\n              className: \"Form\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                className: \"smallButton\",\n                onClick: createTask,\n                children: \"Save Task  \\uD83D\\uDCE5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                variant: \"contained\",\n                className: \"smallButton\",\n                onClick: handleClearForm,\n                children: \"Clear Form \\u2716\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(GreenButton, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: updateTask,\n                children: \"Update ToDo \\uD83D\\uDCE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Form, \"5hc2RNITV7CkYLh9kwaVBng+rTg=\");\n\n_c2 = Form;\n;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/to-do-new/client/todo/src/components/Form.js"],"names":["React","useState","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","Radio","RadioGroup","FormGroup","FormControlLabel","Container","InputLabel","MenuItem","Select","Icon","Swal","green","orange","yellow","withStyles","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","Form","taskName","setTaskName","assignedContact","setAssignedContact","priority","setPriority","taskId","setTaskId","startDate","setStartDate","endDate","setEndDate","notes","setNotes","createTask","value","post","then","response","resData","data","fire","icon","title","handleClearForm","updateTask","put","JSON","stringify","xs","sm","md","e","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box, Radio, RadioGroup, FormGroup,FormControlLabel\n, Container, InputLabel, MenuItem, Select,\nIcon} from '@material-ui/core';\nimport \"../App.css\"\nimport Swal from 'sweetalert2';\nimport { green, orange, yellow} from '@material-ui/core/colors'\nimport { withStyles } from '@material-ui/core/styles'\n\n\nconst GreenButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n\nfunction Form (){\n\n\n    const [taskName, setTaskName] = useState('');\n    const [assignedContact, setAssignedContact] = useState('');\n    const [priority, setPriority] = useState('');\n    const [taskId, setTaskId] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [notes, setNotes] = useState('')\n\n\n\n  function createTask() {\n    const value = {\n        taskName: taskName,\n        assignedContact: assignedContact,\n        priority: priority,\n        taskId: taskId,\n        startDate: startDate,\n        endDate: endDate,\n        notes: notes\n    };\n\n    axios.post('http://localhost:8080/createtask', value).then((response) => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Task Saved!',\n     \n      })\n      handleClearForm();\n    });\n  }\n\n  function updateTask(){\n    const value = {\n        taskName: taskName,\n        assignedContact: assignedContact,\n        priority: priority,\n        taskId: taskId,\n        startDate: startDate,\n        endDate: endDate,\n        notes: notes\n      \n    };\n    axios.put(`http://localhost:8080/updateTask/${taskId}`, value)\n    .then( (response) => {\n        // handle success\n        var resData = response.data;\n        let data = JSON.stringify(resData);\n        Swal.fire({\n          icon: 'success',\n          title: 'Updated Task',\n      \n       \n        })\n        handleClearForm();\n     \n    });\n  }\n\n    \n    const handleClearForm = () => (\n       setTaskName(''),\n       setAssignedContact(''),\n       setPriority(''),\n       setTaskId(''),\n       setStartDate(''),\n       setEndDate(''),\n       setNotes('')\n\n    );\n    \n\n\n  return (<div >\n\n  \n        <Box \n    \n          display=\"flex\" \n          justifyContent=\"center\"\n          alignItems=\"center\"\n          className = \"Form\">\n\n<Grid  item xs={12} md={4} container spacing={3} rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3}}>\n        <FormControl>\n\n        \n        \n              <FormLabel style={{color:\"#3f51b5\"}} >\n                  <h2 >\n                    <strong>\n                      <u>  Create Task </u>\n                    </strong>\n                  </h2>\n                  </FormLabel>\n              \n                  \n                  <FormGroup    className = \"Form\" >\n                <TextField\n               \n                         className = \"Form\"\n                      type=\"text\"\n                      placeholder=\"Task Name\"\n                      alignItems=\"center\"\n                      variant=\"outlined\"\n                      label=\"Task Name\"\n                      value={taskName}\n                      onChange={(e) => setTaskName(e.target.value)}\n                      >\n                     \n                      </TextField>\n                      </FormGroup>\n\n\n\n                      <FormGroup    className = \"Form\" >\n               \n                      <FormControl fullWidth>\n                <FormLabel>Assigned Contact</FormLabel>\n          \n                  <Select\n                \n                 \n                    \n              \n              \n              \n                    variant=\"outlined\"\n                    value={assignedContact}\n                    onChange={(e) => setAssignedContact(e.target.value)}\n     \n                    \n                  >\n                    <MenuItem value={\"Mosu\"}>Mosu</MenuItem>\n                    <MenuItem value={\"Adam\"}>Adam</MenuItem>\n                    <MenuItem value={\"James\"}>James</MenuItem>\n                 \n                  </Select>\n                </FormControl>\n                \n                     </FormGroup>\n\n\n\n\n\n\n            <FormGroup    className = \"Form\" >\n            <FormControl fullWidth>\n                <FormLabel>Task Priority</FormLabel>\n          \n                  <Select\n                \n                 \n                onChange={(e) => setPriority(e.target.value)}\n              \n                value={priority}\n              \n                    variant=\"outlined\"\n     \n                    \n                  >\n                    <MenuItem value={\"High\"}>High </MenuItem>\n                    <MenuItem value={\"Medium\"}>Medium</MenuItem>\n                    <MenuItem value={\"Low\"}>Low</MenuItem>\n                 \n                  </Select>\n                </FormControl>\n\n               </FormGroup>\n                 \n                 <FormGroup    className = \"Form\" >\n               \n \n               <TextField\n             className = \"Form\"\n             value={taskId}\n             onChange={(e) => setTaskId(e.target.value)}\n                   \n                     label=\"Task ID\"\n                     type=\"number\"\n                     placeholder=\"Task ID\"\n               \n                     variant=\"outlined\"\n                    \n                    \n              />\n              </FormGroup>\n\n                      \n              <FormGroup    className = \"Form\" >\n               \n              <FormLabel>Start Date</FormLabel>\n              <TextField\n              value={startDate}\n              onChange={(e) => setStartDate(e.target.value)}\n             className = \"Form\"\n                   \n                 \n                     type=\"date\"\n                    \n               \n                     variant=\"outlined\"\n                    \n                    \n              />\n              </FormGroup>\n                      \n              <FormGroup    className = \"Form\" >\n               \n \n                  \n              <FormLabel>End Date</FormLabel>\n              <TextField\n             className = \"Form\"\n             value={endDate}\n             onChange={(e) => setEndDate(e.target.value)}\n                     type=\"date\"\n                     variant=\"outlined\"          \n                    \n              />\n              </FormGroup>\n\n            <FormGroup    className = \"Form\" >\n            <TextField \n            className = \"Form\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n            \n                 type=\"number\"\n                 placeholder=\"Notes\"\n                 label=\"Notes\"\n\n                  multiline\n                rows={5}\n           \n                \n         \n                 variant=\"outlined\"\n                \n              \n     />\n     </FormGroup>\n           \n\n           \n \n         <Grid >\n               <ButtonGroup variant=\"outlined\"    className = \"Form\" >\n               <Button\n                 color=\"primary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n                 onClick={createTask}\n                 \n                \n               \n              \n              \n               >\n                 Save Task  &#128229;\n               </Button>\n        \n \n               <Button\n                 color=\"secondary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n                 onClick = {handleClearForm}\n              \n                \n                 \n               >\n                 Clear Form &#10006;\n               </Button>\n              \n \n               <GreenButton\n              variant='contained'\n               color='secondary'\n               onClick={updateTask}\n         \n         \n              \n               >Update ToDo &#128233;</GreenButton>\n \n\n \n \n          </ButtonGroup>\n          </Grid>\n        \n       \n     </FormControl>\n     </Grid>\n \n     \n \n         </Box>\n\n\n  </div>);\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}